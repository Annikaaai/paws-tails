# Generated by Django 5.1.4 on 2025-04-10 18:41

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Good",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Название")),
                ("description", models.TextField(verbose_name="Описание")),
                (
                    "photo_url",
                    models.CharField(default="", max_length=1000, verbose_name="Фото"),
                ),
                ("price", models.IntegerField(verbose_name="Цена")),
                (
                    "category",
                    models.IntegerField(
                        choices=[
                            (1, "Корм"),
                            (2, "Игрушки"),
                            (3, "Аксессуары"),
                            (4, "Уход"),
                            (5, "Другое"),
                        ],
                        verbose_name="Категория",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Дата добавления"),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Владелец",
                    ),
                ),
            ],
            options={
                "verbose_name": "Товар",
                "verbose_name_plural": "Товары",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Pet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Кличка")),
                (
                    "species",
                    models.CharField(
                        choices=[
                            ("dog", "Собака"),
                            ("cat", "Кошка"),
                            ("bird", "Птица"),
                            ("other", "Другое"),
                        ],
                        max_length=20,
                        verbose_name="Вид животного",
                    ),
                ),
                (
                    "breed",
                    models.CharField(blank=True, max_length=100, verbose_name="Порода"),
                ),
                (
                    "age",
                    models.PositiveIntegerField(blank=True, null=True, verbose_name="Возраст"),
                ),
                (
                    "photo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="pets/",
                        verbose_name="Фотография",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Дата добавления"),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Владелец",
                    ),
                ),
            ],
            options={
                "verbose_name": "Питомец",
                "verbose_name_plural": "Питомцы",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Заголовок")),
                ("description", models.TextField(verbose_name="Описание")),
                (
                    "photo_url",
                    models.CharField(default="", max_length=1000, verbose_name="Фото"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Дата создания"),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Автор",
                    ),
                ),
                (
                    "pet",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="posts",
                        to="main.pet",
                        verbose_name="Питомец",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пост",
                "verbose_name_plural": "Посты",
                "ordering": ["-created_at"],
            },
        ),
    ]
